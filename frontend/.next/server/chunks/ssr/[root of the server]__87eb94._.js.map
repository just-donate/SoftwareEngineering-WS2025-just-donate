{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/sarpsahinalp/IdeaProjects/SoftwareEngineering-WS2025-just-donate/frontend/src/styles/themes.ts"],"sourcesContent":["export interface Theme {\n  primary: string;\n  secondary: string;\n  accent: string;\n  background: string;\n  card: string;\n  text: string;\n  textLight: string;\n  font: string;\n  icon: string;\n  ngoName: string;\n  ngoUrl: string;\n  helpUrl: string;\n  statusColors: {\n    donated: string;\n    inTransit: string;\n    allocated: string;\n    used: string;\n  };\n}\n\nexport const themes: Record<string, Theme> = {\n  default: {\n    primary: 'bg-purple-600 text-white',\n    secondary: 'bg-pink-500 text-white',\n    accent: 'bg-yellow-400 text-gray-900',\n    background: 'bg-gray-100',\n    card: 'bg-white',\n    text: 'text-gray-800',\n    textLight: 'text-gray-600',\n    font: 'font-sans',\n    icon: 'üéóÔ∏è',\n    ngoName: 'Global Giving',\n    ngoUrl: 'https://www.globalgiving.org',\n    helpUrl: '/help',\n    statusColors: {\n      donated: 'bg-green-500',\n      inTransit: 'bg-yellow-500',\n      allocated: 'bg-blue-500',\n      used: 'bg-purple-500',\n    },\n  },\n};\n\n"],"names":[],"mappings":";;;AAqBO,MAAM,SAAgC;IAC3C,SAAS;QACP,SAAS;QACT,WAAW;QACX,QAAQ;QACR,YAAY;QACZ,MAAM;QACN,MAAM;QACN,WAAW;QACX,MAAM;QACN,MAAM;QACN,SAAS;QACT,QAAQ;QACR,SAAS;QACT,cAAc;YACZ,SAAS;YACT,WAAW;YACX,WAAW;YACX,MAAM;QACR;IACF;AACF"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/sarpsahinalp/IdeaProjects/SoftwareEngineering-WS2025-just-donate/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useState, useContext, ReactNode, useEffect } from 'react'\nimport { Theme, themes } from '../styles/themes'\n\ninterface ThemeContextType {\n  theme: Theme\n  setTheme: (themeName: string) => void\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\n\nexport const ThemeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>(themes.default)\n\n  const setTheme = (themeName: string) => {\n    const newTheme = themes[themeName as keyof typeof themes] || themes.default\n    setThemeState(newTheme)\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('theme', themeName)\n    }\n  }\n\n  useEffect(() => {\n// TODO: Make real api call\n    // For now just mock data\n\n    const fetchedTheme = {\n      custom: {\n        primary: 'bg-blue-600 text-white',\n        secondary: 'bg-cyan-500 text-white',\n        accent: 'bg-orange-400 text-gray-900',\n        background: 'bg-gray-50',\n        card: 'bg-white',\n        text: 'text-gray-900',\n        textLight: 'text-gray-700',\n        font: 'font-sans',\n        icon: 'üåç',\n        ngoName: 'World Aid',\n        ngoUrl: 'https://www.worldaid.org',\n        helpUrl: '/support',\n        statusColors: {\n          donated: 'bg-emerald-500',\n          inTransit: 'bg-amber-500',\n          allocated: 'bg-sky-500',\n          used: 'bg-indigo-500',\n        },\n      }\n    };\n\n\n\n    if (typeof window !== 'undefined') {\n      const savedTheme = localStorage.getItem('theme')\n      if (savedTheme && themes[savedTheme as keyof typeof themes]) {\n        setThemeState(themes[savedTheme as keyof typeof themes])\n      } else {\n        setThemeState(fetchedTheme.custom)\n        localStorage.setItem('theme', 'custom');\n      }\n    }\n  }, [])\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  return context\n}\n\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAUA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,gBAAmD,CAAC,EAAE,QAAQ,EAAE;IAC3E,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,uHAAA,CAAA,SAAM,CAAC,OAAO;IAE7D,MAAM,WAAW,CAAC;QAChB,MAAM,WAAW,uHAAA,CAAA,SAAM,CAAC,UAAiC,IAAI,uHAAA,CAAA,SAAM,CAAC,OAAO;QAC3E,cAAc;QACd,uCAAmC;;QAEnC;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACZ,2BAA2B;QACvB,yBAAyB;QAEzB,MAAM,eAAe;YACnB,QAAQ;gBACN,SAAS;gBACT,WAAW;gBACX,QAAQ;gBACR,YAAY;gBACZ,MAAM;gBACN,MAAM;gBACN,WAAW;gBACX,MAAM;gBACN,MAAM;gBACN,SAAS;gBACT,QAAQ;gBACR,SAAS;gBACT,cAAc;oBACZ,SAAS;oBACT,WAAW;oBACX,WAAW;oBACX,MAAM;gBACR;YACF;QACF;QAIA,uCAAmC;;QAQnC;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAS;kBAC7C;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}